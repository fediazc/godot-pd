name: Build
on:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: linux-debug
            name: Linux Debug
            runner: ubuntu-latest
            target: template_debug
            platform: linux
            arch: x86_64
            build-type: Debug
            libpd-lib-dir: libpd/build/libs/
            target-dir: demo/addons/godot-pd/bin/
            suffix: .so
          - identifier: linux-release
            name: Linux Release
            runner: ubuntu-latest
            target: template_release
            platform: linux
            arch: x86_64
            build-type: Release
            libpd-lib-dir: libpd/build/libs/
            target-dir: demo/addons/godot-pd/bin/
            suffix: .so
          - identifier: windows-debug
            name: Windows Debug
            runner: ubuntu-latest
            target: template_debug
            platform: windows
            arch: x86_64
            build-type: Debug
            libpd-lib-dir: libpd/build/libs/
            target-dir: demo/addons/godot-pd/bin/
            suffix: .dll
          - identifier: windows-release
            name: Windows Release
            runner: ubuntu-latest
            target: template_release
            platform: windows
            arch: x86_64
            build-type: Release
            libpd-lib-dir: libpd/build/libs/
            target-dir: demo/addons/godot-pd/bin/
            suffix: .dll
          - identifier: macos-debug
            name: macOS Debug
            runner: macos-latest
            target: template_debug
            platform: macos
            arch: ''
            build-type: Debug
            libpd-lib-dir: libpd/build/libs/
            target-dir: demo/addons/godot-pd/bin/libgodotpd.macos.template_debug.framework/
            suffix: .dylib
          - identifier: macos-release
            name: macOS Release
            runner: macos-latest
            target: template_release
            platform: macos
            arch: ''
            build-type: Release
            libpd-lib-dir: libpd/build/libs/
            target-dir: demo/addons/godot-pd/bin/libgodotpd.macos.template_release.framework/
            suffix: .dylib

    steps:
      - name: (Windows) Install mingw64
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        run: |
          sudo apt-get install mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      
      - name: Install SCons
        run: |
          python -m pip install scons
          scons --version
        
      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: (Windows) Compile libpd
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        run: |
          cd libpd
          echo 'set(CMAKE_SHARED_LIBRARY_PREFIX "")' >> CMakeLists.txt
          mkdir build && cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=../../toolchain-mingw-x86_64-w64.cmake -DCMAKE_BUILD_TYPE='${{ matrix.build-type }}'
          cmake --build .
          cd libs
          mv liblibpd.dll.a libpd.a
          ls -l
      
      - name: (Linux) Compile libpd
        if: ${{ startsWith(matrix.identifier, 'linux-') }}
        run: |
          cd libpd
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE='${{ matrix.build-type }}'
          cmake --build .
          cd libs
          ls -l

      - name: (macOS) Compile libpd
        if: ${{ startsWith(matrix.identifier, 'macos-') }}
        run: |
          cd libpd
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE='${{ matrix.build-type }}' -DCMAKE_OSX_ARCHITECTURES='arm64;x86_64' -DCMAKE_C_COMPILER=$(brew --prefix llvm@15)/bin/clang
          cmake --build .
          cd libs
          ls -l      

      - name: Compile Extension
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}' libpd_lib_dir='${{ matrix.libpd-lib-dir }}'
          ls -l ${{ matrix.target-dir }}
          
      - name: (Windows) Move pthread DLL
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        run: |
          cp /usr/x86_64-w64-mingw32/lib/libwinpthread-1.dll ${{ matrix.target-dir }}

      - name: Move Shared Library Files
        run: |
          cp ${{ format('{0}libpd{1}', matrix.libpd-lib-dir, matrix.suffix) }} ${{ matrix.target-dir }}
          ls -l ${{ matrix.target-dir }}
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('godot-pd-binaries_{0}', matrix.identifier) }}
          path: ${{ github.workspace }}/demo/addons/godot-pd/bin

  merge-artifacts:
    needs: build
    runs-on: ubuntu-latest
    name: Merge Artifacts
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
      
      - run: mkdir -p godot-pd-release/godot-pd/bin/

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: godot-pd-release/godot-pd/bin/
          pattern: godot-pd-binaries_*
          merge-multiple: true
      
      - run: ls -l godot-pd-release/godot-pd/bin/

      - run: |
          mv demo/addons/godot-pd/godot-pd.gdextension godot-pd-release/godot-pd/
          ls -l godot-pd-release/godot-pd/
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: godot-pd-release
          path: godot-pd-release/
